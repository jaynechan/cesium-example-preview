const n="<template>\r\n  <div class=\"cesiumContainer\" id=\"cesiumContainer\"></div>\r\n</template>\r\n\r\n<script setup>\r\nimport * as Cesium from 'cesium'\r\nimport { onMounted } from 'vue'\r\n\r\nonMounted(() => {\r\n  Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI0ZTgxZDQzNi1kZDJhLTQ4MDItYmE3MC0xMmRhYTJlNDViYzQiLCJpZCI6NDM0MzQsImlhdCI6MTY3NzEzMjQwNn0.LUp8czTsGuciTiyYSkA3JxK9gxTy-VYmIcFcS2ow134'\r\n  const viewer = new Cesium.Viewer('cesiumContainer', {\r\n    timeline: false, // 是否显示时间轴\r\n    fullscreenButton: false, // 是否显示全屏按钮\r\n    contextOptions: { webgl: { alpha: true, preserveDrawingBuffer: true }, requestWebgl1: true } // webgl1\r\n  })\r\n  const control = viewer.scene.screenSpaceCameraController\r\n  control.tiltEventTypes = Cesium.CameraEventType.RIGHT_DRAG\r\n  control.zoomEventTypes = [\r\n    Cesium.CameraEventType.WHEEL,\r\n    Cesium.CameraEventType.PINCH\r\n  ]\r\n  const position = Cesium.Cartesian3.fromDegrees(113.297730, 23.060679, 5000)\r\n  viewer.camera.setView({\r\n    destination: position,\r\n    orientation: {\r\n      heading: 0,\r\n      pitch: Cesium.Math.toRadians(-10),\r\n      roll: 0\r\n    }\r\n  })\r\n  // 下雨\r\n  const rain = new Rain(viewer, {\r\n    angle: -0.4,\r\n    size: 0.8,\r\n    speed: 160\r\n  })\r\n  rain.show(true)\r\n  // 闪电\r\n  const lightning = new Lightning(viewer)\r\n  lightning.show(true)\r\n})\r\n<\/script>\r\n<style scoped>\r\n.cesiumContainer {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden\r\n}\r\n</style>\r\n";export{n as default};
