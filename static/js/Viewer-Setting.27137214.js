const e="<template>\r\n  <div class=\"cesiumContainer\" id=\"cesiumContainer\"></div>\r\n</template>\r\n\r\n<script setup>\r\nimport * as Cesium from 'cesium'\r\nimport { onMounted } from 'vue'\r\n\r\nonMounted(() => {\r\n  Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI0ZTgxZDQzNi1kZDJhLTQ4MDItYmE3MC0xMmRhYTJlNDViYzQiLCJpZCI6NDM0MzQsImlhdCI6MTY3NzEzMjQwNn0.LUp8czTsGuciTiyYSkA3JxK9gxTy-VYmIcFcS2ow134'\r\n  // 初始化Cesium Viewer\r\n  const defaultOptions = {\r\n    animation: false, // 是否创建动画小器件，左下角仪表\r\n    baseLayerPicker: false, // 是否显示图层选择器\r\n    fullscreenButton: false, // 是否显示全屏按钮\r\n    vrButton: false, // 用于切换 VR 模式的单个按钮小部件。\r\n    geocoder: false, // //是否显示geocoder小器件，右上角查询按钮\r\n    homeButton: false, // 是否显示Home按钮\r\n    infoBox: false, // 是否显示信息框\r\n    sceneModePicker: false, // 是否显示3D/2D选择器\r\n    selectionIndicator: false, // 是否显示选取指示器组件\r\n    timeline: false, // 是否显示时间轴\r\n    navigationHelpButton: false, // 是否显示右上角的帮助按钮\r\n    navigationInstructionsInitiallyVisible: false,\r\n    scene3DOnly: false, // 如果设置为true，则所有几何图形以3D模式绘制以节约GPU资源\r\n    shouldAnimate: false, // 初始化是否开始动画\r\n    clockViewModel: undefined, // 一个视图模型，它为用户界面提供 Clock\r\n    selectedImageryProviderViewModel: undefined, // 当前图像图层的显示模型，仅baseLayerPicker设为true有意义\r\n    selectedTerrainProviderViewModel: undefined, // 当前地形图层的显示模型，仅baseLayerPicker设为true有意义\r\n    skyAtmosphere: new Cesium.SkyAtmosphere(), // 围绕提供的椭球体边缘绘制的大气\r\n    fullscreenElement: document.body, // 全屏时渲染的HTML元素,\r\n    targetFrameRate: undefined, // 使用默认render loop时的帧率\r\n    showRenderLoopErrors: false, // 如果设为true，将在一个HTML面板中显示错误信息\r\n    automaticallyTrackDataSourceClocks: false, // 自动追踪最近添加的数据源的时钟设置\r\n    sceneMode: Cesium.SceneMode.SCENE3D, // 初始场景模式\r\n    // mapProjection: new Cesium.WebMercatorProjection(), //地图投影体系\r\n    // globe: undefined, // 在场景中渲染的地球仪，包括其地形 ( Globe#terrainProvider ) 和图像图层 ( Globe#imageryLayers )\r\n    orderIndependentTranslucency: false,\r\n    projectionPicker: undefined // ProjectionPicker 是用于在透视和正交投影之间切换的单按钮小部件。\r\n  }\r\n  const viewer = new Cesium.Viewer('cesiumContainer', {\r\n    ...defaultOptions\r\n  })\r\n  const control = viewer.scene.screenSpaceCameraController\r\n  control.tiltEventTypes = Cesium.CameraEventType.RIGHT_DRAG\r\n  control.zoomEventTypes = [Cesium.CameraEventType.WHEEL, Cesium.CameraEventType.PINCH]\r\n  control.minimumZoomDistance = 20\r\n  viewer.cesiumWidget.screenSpaceEventHandler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_CLICK)\r\n  // 地图操作惯性阻尼\r\n  // viewer.scene.screenSpaceCameraController.inertiaSpin = 0.2\r\n  viewer.scene.screenSpaceCameraController.inertiaTranslate = 0.2\r\n  viewer.scene.screenSpaceCameraController.inertiaZoom = 0.2\r\n  // 移除鼠标双击追踪\r\n  viewer.cesiumWidget.screenSpaceEventHandler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK)\r\n  // 开启深度检测\r\n  viewer.scene.globe.depthTestAgainstTerrain = true\r\n  // 抗锯齿\r\n  viewer.scene.postProcessStages.fxaa.enabled = true\r\n})\r\n<\/script>\r\n<style scoped>\r\n.cesiumContainer {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n}\r\n</style>\r\n";export{e as default};
