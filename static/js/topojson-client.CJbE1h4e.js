function n(n){return n}function t(t,r){var e=function(t){if(null==t)return n;var r,e,a=t.scale[0],o=t.scale[1],c=t.translate[0],u=t.translate[1];return function(n,t){t||(r=e=0);var f=2,i=n.length,s=new Array(i);for(s[0]=(r+=n[0])*a+c,s[1]=(e+=n[1])*o+u;f<i;)s[f]=n[f],++f;return s}}(t.transform),a=t.arcs;function o(n,t){t.length&&t.pop();for(var r=a[n<0?~n:n],o=0,c=r.length;o<c;++o)t.push(e(r[o],o));n<0&&function(n,t){for(var r,e=n.length,a=e-t;a<--e;)r=n[a],n[a++]=n[e],n[e]=r}(t,c)}function c(n){return e(n)}function u(n){for(var t=[],r=0,e=n.length;r<e;++r)o(n[r],t);return t.length<2&&t.push(t[0]),t}function f(n){for(var t=u(n);t.length<4;)t.push(t[0]);return t}function i(n){return n.map(f)}return function n(t){var r,e=t.type;switch(e){case"GeometryCollection":return{type:e,geometries:t.geometries.map(n)};case"Point":r=c(t.coordinates);break;case"MultiPoint":r=t.coordinates.map(c);break;case"LineString":r=u(t.arcs);break;case"MultiLineString":r=t.arcs.map(u);break;case"Polygon":r=i(t.arcs);break;case"MultiPolygon":r=t.arcs.map(i);break;default:return null}return{type:e,coordinates:r}}(r)}function r(n,t){var r={},e={},a={},o=[],c=-1;function u(n,t){for(var e in n){var a=n[e];delete t[a.start],delete a.start,delete a.end,a.forEach((function(n){r[n<0?~n:n]=1})),o.push(a)}}return t.forEach((function(r,e){var a,o=n.arcs[r<0?~r:r];o.length<3&&!o[1][0]&&!o[1][1]&&(a=t[++c],t[c]=r,t[e]=a)})),t.forEach((function(t){var r,o,c=function(t){var r,e=n.arcs[t<0?~t:t],a=e[0];n.transform?(r=[0,0],e.forEach((function(n){r[0]+=n[0],r[1]+=n[1]}))):r=e[e.length-1];return t<0?[r,a]:[a,r]}(t),u=c[0],f=c[1];if(r=a[u])if(delete a[r.end],r.push(t),r.end=f,o=e[f]){delete e[o.start];var i=o===r?r:r.concat(o);e[i.start=r.start]=a[i.end=o.end]=i}else e[r.start]=a[r.end]=r;else if(r=e[f])if(delete e[r.start],r.unshift(t),r.start=u,o=a[u]){delete a[o.end];var s=o===r?r:o.concat(r);e[s.start=o.start]=a[s.end=r.end]=s}else e[r.start]=a[r.end]=r;else e[(r=[t]).start=u]=a[r.end=f]=r})),u(a,e),u(e,a),t.forEach((function(n){r[n<0?~n:n]||o.push([n])})),o}function e(n){return t(n,a.apply(this,arguments))}function a(n,e){var a={},o=[],c=[];function u(n){n.forEach((function(t){t.forEach((function(t){(a[t=t<0?~t:t]||(a[t]=[])).push(n)}))})),o.push(n)}function f(r){return function(n){for(var t,r=-1,e=n.length,a=n[e-1],o=0;++r<e;)t=a,a=n[r],o+=t[0]*a[1]-t[1]*a[0];return Math.abs(o)}(t(n,{type:"Polygon",arcs:[r]}).coordinates[0])}return e.forEach((function n(t){switch(t.type){case"GeometryCollection":t.geometries.forEach(n);break;case"Polygon":u(t.arcs);break;case"MultiPolygon":t.arcs.forEach(u)}})),o.forEach((function(n){if(!n._){var t=[],r=[n];for(n._=1,c.push(t);n=r.pop();)t.push(n),n.forEach((function(n){n.forEach((function(n){a[n<0?~n:n].forEach((function(n){n._||(n._=1,r.push(n))}))}))}))}})),o.forEach((function(n){delete n._})),{type:"MultiPolygon",arcs:c.map((function(t){var e,o=[];if(t.forEach((function(n){n.forEach((function(n){n.forEach((function(n){a[n<0?~n:n].length<2&&o.push(n)}))}))})),(e=(o=r(n,o)).length)>1)for(var c,u,i=1,s=f(o[0]);i<e;++i)(c=f(o[i]))>s&&(u=o[0],o[0]=o[i],o[i]=u,s=c);return o})).filter((function(n){return n.length>0}))}}export{e as m};
