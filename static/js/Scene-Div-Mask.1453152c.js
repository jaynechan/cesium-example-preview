const n="<template>\r\n  <div class=\"container\">\r\n    <div class=\"mask\"></div>\r\n    <div class=\"cesiumContainer\" id=\"cesiumContainer\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport * as Cesium from 'cesium'\r\nimport { onMounted } from 'vue'\r\n\r\nlet viewer\r\n\r\nonMounted(async () => {\r\n  Cesium.Ion.defaultAccessToken =\r\n    'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJmZTA1MDQ2NC0wZmYwLTRhZWMtYWY4OC1jY2JkMDU1NjVmOGMiLCJpZCI6NDM0MzQsImlhdCI6MTY0OTkzNjc0Mn0.nafX1X_3586auU738TC3DxvsiSvPxnQ3TmamqUkb8kw'\r\n  viewer = new Cesium.Viewer('cesiumContainer', {\r\n    animation: false, // 是否创建动画小器件，左下角仪表\r\n    baseLayerPicker: false, // 是否显示图层选择器\r\n    fullscreenButton: false, // 是否显示全屏按钮\r\n    vrButton: false, // 用于切换 VR 模式的单个按钮小部件。\r\n    geocoder: false, // //是否显示geocoder小器件，右上角查询按钮\r\n    homeButton: false, // 是否显示Home按钮\r\n    infoBox: false, // 是否显示信息框\r\n    sceneModePicker: false, // 是否显示3D/2D选择器\r\n    selectionIndicator: false, // 是否显示选取指示器组件\r\n    timeline: false, // 是否显示时间轴\r\n    navigationHelpButton: false, // 是否显示右上角的帮助按钮\r\n    navigationInstructionsInitiallyVisible: false,\r\n    scene3DOnly: false, // 如果设置为true，则所有几何图形以3D模式绘制以节约GPU资源\r\n    shouldAnimate: false // 初始化是否开始动画\r\n  })\r\n  // 3dtiles\r\n  const scene = viewer.scene\r\n  const resource = await Cesium.IonResource.fromAssetId(1633341)\r\n  const tileset = await Cesium.Cesium3DTileset.fromUrl(resource)\r\n  changeHeight(tileset, 60)\r\n  scene.primitives.add(tileset)\r\n  viewer.flyTo(tileset, {\r\n    duration: 0\r\n  })\r\n})\r\n\r\nfunction changeHeight(tileset, height) {\r\n  const cartographic = Cesium.Cartographic.fromCartesian(\r\n    tileset.boundingSphere.center\r\n  )\r\n  const surface = Cesium.Cartesian3.fromRadians(\r\n    cartographic.longitude,\r\n    cartographic.latitude,\r\n    0.0\r\n  )\r\n  const offset = Cesium.Cartesian3.fromRadians(\r\n    cartographic.longitude,\r\n    cartographic.latitude,\r\n    height\r\n  )\r\n  const translation = Cesium.Cartesian3.subtract(\r\n    offset,\r\n    surface,\r\n    new Cesium.Cartesian3()\r\n  )\r\n  tileset.modelMatrix = Cesium.Matrix4.fromTranslation(translation)\r\n}\r\n<\/script>\r\n<style scoped>\r\n.container {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  position: relative;\r\n\r\n  .cesiumContainer {\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .mask {\r\n    position: absolute;\r\n    top: 0px;\r\n    width: 100%;\r\n    height: 100%;\r\n    pointer-events: none;\r\n    z-index: 1;\r\n    background-image: radial-gradient(rgba(139, 138, 138, 0.22) 50%, rgba(65, 57, 57, 0.66) 70%, rgb(17, 16, 16) 90%);\r\n  }\r\n}\r\n</style>\r\n";export{n as default};
