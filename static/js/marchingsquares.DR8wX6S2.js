/*!
* MarchingSquaresJS
* version 1.3.3
* https://github.com/RaumZeit/MarchingSquares.js
*
* @license GNU Affero General Public License.
* Copyright (c) 2015-2019 Ronny Lorenz <ronny@tbi.univie.ac.at>
*/function O(i,l,s){return i<l?(s-i)/(l-i):(i-s)/(i-l)}function P(i,l,s,r){var n;return s>r&&(n=s,s=r,r=n),i<l?i<s?(s-i)/(l-i):(r-i)/(l-i):i>r?(i-r)/(i-l):(i-s)/(i-l)}function F(i,l,s,r){return i<l?(s-i)/(l-i):(i-r)/(i-l)}function z(i,l,s,r){return i<l?(r-i)/(l-i):(i-s)/(i-l)}function S(){this.successCallback=null,this.verbose=!1,this.polygons=!1,this.polygons_full=!1,this.linearRing=!0,this.noQuadTree=!1,this.noFrame=!1}function K(i){var l,s,r,n,e;for(n=new S,i=i||{},e=Object.keys(n),l=0;l<e.length;l++)s=e[l],r=i[s],typeof r<"u"&&r!==null&&(n[s]=r);return n.polygons_full=!n.polygons,n.interpolate=P,n.interpolate_a=F,n.interpolate_b=z,n}function $(i){var l,s,r,n,e;for(n=new S,i=i||{},e=Object.keys(n),l=0;l<e.length;l++)s=e[l],r=i[s],typeof r<"u"&&r!==null&&(n[s]=r);return n.polygons_full=!n.polygons,n.interpolate=O,n}function j(i,l,s,r){var n=[];return i.polygons.forEach(function(e){e.forEach(function(g){g[0]+=l,g[1]+=s}),r.linearRing&&e.push(e[0]),n.push(e)}),n}function J(i,l,s,r){return s===0?(i+=1,l+=r[0][1]):s===1?i+=r[0][0]:s===2?l+=r[0][1]:s===3&&(i+=r[0][0],l+=1),[i,l]}function I(i,l,s){return s===0?i++:s===1||(s===2?l++:s===3&&(i++,l++)),[i,l]}function H(i,l,s){var r,n,e,g,a;for(r=!0,n=i[0].length,e=i.length,a=0;a<e;a++)if(i[a][0]<l||i[a][0]>s||i[a][n-1]<l||i[a][n-1]>s){r=!1;break}if(r&&(i[e-1][0]<l||i[e-1][0]>s||i[e-1][n-1]<l||i[e-1][n-1]>s)&&(r=!1),r){for(g=0;g<n-1;g++)if(i[0][g]<l||i[0][g]>s||i[e-1][g]<l||i[e-1][g]>s){r=!1;break}}return r}function U(i,l){var s,r,n,e,g;for(s=!0,r=i[0].length,n=i.length,g=0;g<n;g++)if(i[g][0]>=l||i[g][r-1]>=l){s=!1;break}if(s&&(i[n-1][0]>=l||i[n-1][r-1]>=l)&&(s=!1),s){for(e=0;e<r-1;e++)if(i[0][e]>=l||i[n-1][e]>l){s=!1;break}}return s}function X(i,l,s){var r,n,e,g,a,o,t,f,m,u,y,_,b,v,d,V,x=[],p=i.length-1,k=i[0].length-1,A=[["rt","rb"],["br","bl"],["lb","lt"],["tl","tr"]],N=[0,-1,0,1],q=[-1,0,1,0],Q=["bl","lb","lt","tl","tr","rt","rb","br"],B={bl:1,br:1,lb:2,lt:2,tl:3,tr:3,rt:0,rb:0};return H(i,s.minV,s.maxV)&&(s.linearRing?x.push([[0,0],[0,p],[k,p],[k,0],[0,0]]):x.push([[0,0],[0,p],[k,p],[k,0]])),l.forEach(function(T,w){T.forEach(function(R,C){for(r=null,e=0;e<8;e++)if(r=Q[e],typeof R.edges[r]=="object"){for(n=[],g=R.edges[r],t=r,f=w,m=C,u=!1,y=[w+g.path[0][0],C+g.path[0][1]],n.push(y);!u&&(_=l[f][m],typeof _.edges[t]=="object");)if(g=_.edges[t],delete _.edges[t],d=g.path[1],d[0]+=f,d[1]+=m,n.push(d),t=g.move.enter,f=f+g.move.x,m=m+g.move.y,typeof l[f]>"u"||typeof l[f][m]>"u"){if(b=0,v=0,f===k)f--,b=0;else if(f<0)f++,b=2;else if(m===p)m--,b=3;else if(m<0)m++,b=1;else throw new Error("Left the grid somewhere in the interior!");if(f===w&&m===C&&b===B[r]){u=!0,t=r;break}for(;;){if(V=!1,v>4)throw new Error("Direction change counter overflow! This should never happen!");if(!(typeof l[f]>"u"||typeof l[f][m]>"u")){for(_=l[f][m],a=0;a<A[b].length;a++)if(o=A[b][a],typeof _.edges[o]=="object"){g=_.edges[o],n.push(J(f,m,b,g.path)),t=o,V=!0;break}}if(V)break;if(n.push(I(f,m,b)),f+=N[b],m+=q[b],(typeof l[f]>"u"||typeof l[f][m]>"u")&&(b===0&&m<0||b===1&&f<0||b===2&&m===p||b===3&&f===k)&&(f-=N[b],m-=q[b],b=(b+1)%4,v++),f===w&&m===C&&b===B[r]){u=!0,t=r;break}}}s.linearRing&&(n[n.length-1][0]!==y[0]||n[n.length-1][1]!==y[1])&&n.push(y),x.push(n)}})}),x}function Y(i,l,s){var r,n,e,g,a,o,t,f,m,u,y,_,b,v,d,V=[],x=i.length-1,p=i[0].length-1,k=["right","bottom","left","top"],A=[0,-1,0,1],N=[-1,0,1,0],q={bottom:1,left:2,top:3,right:0};return s.noFrame||U(i,s.threshold)&&(s.linearRing?V.push([[0,0],[0,x],[p,x],[p,0],[0,0]]):V.push([[0,0],[0,x],[p,x],[p,0]])),l.forEach(function(Q,B){Q.forEach(function(T,w){for(r=null,n=0;n<4;n++)if(r=k[n],typeof T.edges[r]=="object"){for(a=[],e=T.edges[r],o=r,t=B,f=w,m=!1,u=[B+e.path[0][0],w+e.path[0][1]],a.push(u);!m&&(g=l[t][f],typeof g.edges[o]=="object");)if(e=g.edges[o],delete g.edges[o],y=e.path[1],y[0]+=t,y[1]+=f,a.push(y),o=e.move.enter,t=t+e.move.x,f=f+e.move.y,typeof l[t]>"u"||typeof l[t][f]>"u"){if(!s.linearRing)break;if(_=0,b=0,t===p?(t--,_=0):t<0?(t++,_=2):f===x?(f--,_=3):f<0&&(f++,_=1),t===B&&f===w&&_===q[r]){m=!0,o=r;break}for(;;){if(v=!1,b>4)throw new Error("Direction change counter overflow! This should never happen!");if(!(typeof l[t]>"u"||typeof l[t][f]>"u")&&(g=l[t][f],d=k[_],typeof g.edges[d]=="object")){e=g.edges[d],a.push(J(t,f,_,e.path)),o=d,v=!0;break}if(v)break;if(a.push(I(t,f,_)),t+=A[_],f+=N[_],(typeof l[t]>"u"||typeof l[t][f]>"u")&&(_===0&&f<0||_===1&&t<0||_===2&&f===x||_===3&&t===p)&&(t-=A[_],f-=N[_],_=(_+1)%4,b++),t===B&&f===w&&_===q[r]){m=!0,o=r;break}}}s.linearRing&&(a[a.length-1][0]!==u[0]||a[a.length-1][1]!==u[1])&&a.push(u),V.push(a)}})}),V}function E(i,l,s,r,n){var e=r,g=n,a=0,o=0;if(this.x=l,this.y=s,this.lowerBound=null,this.upperBound=null,this.childA=null,this.childB=null,this.childC=null,this.childD=null,r===1&&n===1)this.lowerBound=Math.min(i[s][l],i[s][l+1],i[s+1][l+1],i[s+1][l]),this.upperBound=Math.max(i[s][l],i[s][l+1],i[s+1][l+1],i[s+1][l]);else{if(r>1){for(;e!==0;)e=e>>1,a++;r===1<<a-1&&a--,e=1<<a-1}if(n>1){for(;g!==0;)g=g>>1,o++;n===1<<o-1&&o--,g=1<<o-1}this.childA=new E(i,l,s,e,g),this.lowerBound=this.childA.lowerBound,this.upperBound=this.childA.upperBound,r-e>0&&(this.childB=new E(i,l+e,s,r-e,g),this.lowerBound=Math.min(this.lowerBound,this.childB.lowerBound),this.upperBound=Math.max(this.upperBound,this.childB.upperBound),n-g>0&&(this.childC=new E(i,l+e,s+g,r-e,n-g),this.lowerBound=Math.min(this.lowerBound,this.childC.lowerBound),this.upperBound=Math.max(this.upperBound,this.childC.upperBound))),n-g>0&&(this.childD=new E(i,l,s+g,e,n-g),this.lowerBound=Math.min(this.lowerBound,this.childD.lowerBound),this.upperBound=Math.max(this.upperBound,this.childD.upperBound))}}E.prototype.cellsInBand=function(i,l,s){var r=[];return s=typeof s>"u"?!0:s,this.lowerBound>l||this.upperBound<i||(this.childA||this.childB||this.childC||this.childD?(this.childA&&(r=r.concat(this.childA.cellsInBand(i,l,s))),this.childB&&(r=r.concat(this.childB.cellsInBand(i,l,s))),this.childD&&(r=r.concat(this.childD.cellsInBand(i,l,s))),this.childC&&(r=r.concat(this.childC.cellsInBand(i,l,s)))):(s||this.lowerBound<=i||this.upperBound>=l)&&r.push({x:this.x,y:this.y})),r};E.prototype.cellsBelowThreshold=function(i,l){var s=[];return l=typeof l>"u"?!0:l,this.lowerBound>i||(this.childA||this.childB||this.childC||this.childD?(this.childA&&(s=s.concat(this.childA.cellsBelowThreshold(i,l))),this.childB&&(s=s.concat(this.childB.cellsBelowThreshold(i,l))),this.childD&&(s=s.concat(this.childD.cellsBelowThreshold(i,l))),this.childC&&(s=s.concat(this.childC.cellsBelowThreshold(i,l)))):(l||this.upperBound>=i)&&s.push({x:this.x,y:this.y})),s};function L(i){var l,s;if(!i)throw new Error("data is required");if(!Array.isArray(i)||!Array.isArray(i[0]))throw new Error("data must be scalar field, i.e. array of arrays");if(i.length<2)throw new Error("data must contain at least two rows");if(s=i[0].length,s<2)throw new Error("data must contain at least two columns");for(l=1;l<i.length;l++){if(!Array.isArray(i[l]))throw new Error("Row "+l+" is not an array");if(i[l].length!=s)throw new Error("unequal row lengths detected, please provide a regular grid")}this.data=i,this.root=new E(i,0,0,i[0].length-1,i.length-1)}function Z(i,l,s){var r,n,e,g=!1,a=!1,o=null,t=null,f=null,m=null,u=null,y=[];if(!i)throw new Error("data is required");if(l==null)throw new Error("threshold is required");if(s&&typeof s!="object")throw new Error("options must be an object");if(r=$(s),i instanceof L)o=i,t=i.root,f=i.data,r.noQuadTree||(g=!0);else if(Array.isArray(i)&&Array.isArray(i[0]))f=i;else throw new Error("input is neither array of arrays nor object retrieved from 'QuadTree()'");if(Array.isArray(l)){for(a=!0,r.noQuadTree||(g=!0),n=0;n<l.length;n++)if(isNaN(+l[n]))throw new Error("threshold["+n+"] is not a number")}else{if(isNaN(+l))throw new Error("threshold must be a number or array of numbers");l=[l]}return g&&!t&&(o=new L(f),t=o.root,f=o.data),r.verbose&&(r.polygons?console.log("MarchingSquaresJS-isoLines: returning single lines (polygons) for each grid cell"):console.log("MarchingSquaresJS-isoLines: returning line paths (polygons) for entire data grid"),a&&console.log("MarchingSquaresJS-isoLines: multiple lines requested, returning array of line paths instead of lines for a single threshold")),l.forEach(function(_,b){if(u=[],r.threshold=_,r.verbose&&console.log("MarchingSquaresJS-isoLines: computing iso lines for threshold "+_),r.polygons)if(g)t.cellsBelowThreshold(r.threshold,!0).forEach(function(v){u=u.concat(j(M(f,v.x,v.y,r),v.x,v.y,r))});else for(e=0;e<f.length-1;++e)for(b=0;b<f[0].length-1;++b)u=u.concat(j(M(f,b,e,r),b,e,r));else{for(m=[],b=0;b<f[0].length-1;++b)m[b]=[];if(g)t.cellsBelowThreshold(r.threshold,!1).forEach(function(v){m[v.x][v.y]=M(f,v.x,v.y,r)});else for(b=0;b<f[0].length-1;++b)for(e=0;e<f.length-1;++e)m[b][e]=M(f,b,e,r);u=Y(f,m,r)}a?y.push(u):y=u,typeof r.successCallback=="function"&&r.successCallback(y,_)}),y}function M(i,l,s,r){var n,e,g,a,o,t,f=0,m=i[s+1][l],u=i[s+1][l+1],y=i[s][l+1],_=i[s][l],b=r.threshold;if(!(isNaN(_)||isNaN(y)||isNaN(u)||isNaN(m))){switch(f|=m>=b?8:0,f|=u>=b?4:0,f|=y>=b?2:0,f|=_>=b?1:0,f=+f,t={cval:f,polygons:[],edges:{},x0:_,x1:y,x2:u,x3:m},f){case 0:r.polygons&&t.polygons.push([[0,0],[0,1],[1,1],[1,0]]);break;case 15:break;case 14:n=r.interpolate(_,m,b),a=r.interpolate(_,y,b),r.polygons_full&&(t.edges.left={path:[[0,n],[a,0]],move:{x:0,y:-1,enter:"top"}}),r.polygons&&t.polygons.push([[0,0],[0,n],[a,0]]);break;case 13:a=r.interpolate(_,y,b),e=r.interpolate(y,u,b),r.polygons_full&&(t.edges.bottom={path:[[a,0],[1,e]],move:{x:1,y:0,enter:"left"}}),r.polygons&&t.polygons.push([[a,0],[1,e],[1,0]]);break;case 11:e=r.interpolate(y,u,b),g=r.interpolate(m,u,b),r.polygons_full&&(t.edges.right={path:[[1,e],[g,1]],move:{x:0,y:1,enter:"bottom"}}),r.polygons&&t.polygons.push([[1,e],[g,1],[1,1]]);break;case 7:n=r.interpolate(_,m,b),g=r.interpolate(m,u,b),r.polygons_full&&(t.edges.top={path:[[g,1],[0,n]],move:{x:-1,y:0,enter:"right"}}),r.polygons&&t.polygons.push([[g,1],[0,n],[0,1]]);break;case 1:n=r.interpolate(_,m,b),a=r.interpolate(_,y,b),r.polygons_full&&(t.edges.bottom={path:[[a,0],[0,n]],move:{x:-1,y:0,enter:"right"}}),r.polygons&&t.polygons.push([[a,0],[0,n],[0,1],[1,1],[1,0]]);break;case 2:a=r.interpolate(_,y,b),e=r.interpolate(y,u,b),r.polygons_full&&(t.edges.right={path:[[1,e],[a,0]],move:{x:0,y:-1,enter:"top"}}),r.polygons&&t.polygons.push([[0,0],[0,1],[1,1],[1,e],[a,0]]);break;case 4:e=r.interpolate(y,u,b),g=r.interpolate(m,u,b),r.polygons_full&&(t.edges.top={path:[[g,1],[1,e]],move:{x:1,y:0,enter:"left"}}),r.polygons&&t.polygons.push([[0,0],[0,1],[g,1],[1,e],[1,0]]);break;case 8:n=r.interpolate(_,m,b),g=r.interpolate(m,u,b),r.polygons_full&&(t.edges.left={path:[[0,n],[g,1]],move:{x:0,y:1,enter:"bottom"}}),r.polygons&&t.polygons.push([[0,0],[0,n],[g,1],[1,1],[1,0]]);break;case 12:n=r.interpolate(_,m,b),e=r.interpolate(y,u,b),r.polygons_full&&(t.edges.left={path:[[0,n],[1,e]],move:{x:1,y:0,enter:"left"}}),r.polygons&&t.polygons.push([[0,0],[0,n],[1,e],[1,0]]);break;case 9:a=r.interpolate(_,y,b),g=r.interpolate(m,u,b),r.polygons_full&&(t.edges.bottom={path:[[a,0],[g,1]],move:{x:0,y:1,enter:"bottom"}}),r.polygons&&t.polygons.push([[a,0],[g,1],[1,1],[1,0]]);break;case 3:n=r.interpolate(_,m,b),e=r.interpolate(y,u,b),r.polygons_full&&(t.edges.right={path:[[1,e],[0,n]],move:{x:-1,y:0,enter:"right"}}),r.polygons&&t.polygons.push([[0,n],[0,1],[1,1],[1,e]]);break;case 6:a=r.interpolate(_,y,b),g=r.interpolate(m,u,b),r.polygons_full&&(t.edges.top={path:[[g,1],[a,0]],move:{x:0,y:-1,enter:"top"}}),r.polygons&&t.polygons.push([[0,0],[0,1],[g,1],[a,0]]);break;case 10:n=r.interpolate(_,m,b),e=r.interpolate(y,u,b),a=r.interpolate(_,y,b),g=r.interpolate(m,u,b),o=(_+y+u+m)/4,r.polygons_full&&(o<b?(t.edges.left={path:[[0,n],[g,1]],move:{x:0,y:1,enter:"bottom"}},t.edges.right={path:[[1,e],[a,0]],move:{x:0,y:-1,enter:"top"}}):(t.edges.right={path:[[1,e],[g,1]],move:{x:0,y:1,enter:"bottom"}},t.edges.left={path:[[0,n],[a,0]],move:{x:0,y:-1,enter:"top"}})),r.polygons&&(o<b?t.polygons.push([[0,0],[0,n],[g,1],[1,1],[1,e],[a,0]]):(t.polygons.push([[0,0],[0,n],[a,0]]),t.polygons.push([[g,1],[1,1],[1,e]])));break;case 5:n=r.interpolate(_,m,b),e=r.interpolate(y,u,b),a=r.interpolate(_,y,b),g=r.interpolate(m,u,b),o=(_+y+u+m)/4,r.polygons_full&&(o<b?(t.edges.bottom={path:[[a,0],[0,n]],move:{x:-1,y:0,enter:"right"}},t.edges.top={path:[[g,1],[1,e]],move:{x:1,y:0,enter:"left"}}):(t.edges.top={path:[[g,1],[0,n]],move:{x:-1,y:0,enter:"right"}},t.edges.bottom={path:[[a,0],[1,e]],move:{x:1,y:0,enter:"left"}})),r.polygons&&(o<b?t.polygons.push([[0,n],[0,1],[g,1],[1,e],[1,0],[a,0]]):(t.polygons.push([[0,n],[0,1],[g,1]]),t.polygons.push([[a,0],[1,e],[1,0]])));break}return t}}var h={square:function(i,l,s,r,n,e){e.polygons&&i.polygons.push([[0,0],[0,1],[1,1],[1,0]])},triangle_bl:function(i,l,s,r,n,e){var g=e.interpolate(l,s,e.minV,e.maxV),a=e.interpolate(l,n,e.minV,e.maxV);e.polygons_full&&(i.edges.lb={path:[[0,a],[g,0]],move:{x:0,y:-1,enter:"tl"}}),e.polygons&&i.polygons.push([[0,a],[g,0],[0,0]])},triangle_br:function(i,l,s,r,n,e){var g=e.interpolate(l,s,e.minV,e.maxV),a=e.interpolate(s,r,e.minV,e.maxV);e.polygons_full&&(i.edges.br={path:[[g,0],[1,a]],move:{x:1,y:0,enter:"lb"}}),e.polygons&&i.polygons.push([[g,0],[1,a],[1,0]])},triangle_tr:function(i,l,s,r,n,e){var g=e.interpolate(s,r,e.minV,e.maxV),a=e.interpolate(n,r,e.minV,e.maxV);e.polygons_full&&(i.edges.rt={path:[[1,g],[a,1]],move:{x:0,y:1,enter:"br"}}),e.polygons&&i.polygons.push([[1,g],[a,1],[1,1]])},triangle_tl:function(i,l,s,r,n,e){var g=e.interpolate(n,r,e.minV,e.maxV),a=e.interpolate(l,n,e.minV,e.maxV);e.polygons_full&&(i.edges.tl={path:[[g,1],[0,a]],move:{x:-1,y:0,enter:"rt"}}),e.polygons&&i.polygons.push([[0,a],[0,1],[g,1]])},tetragon_t:function(i,l,s,r,n,e){var g=e.interpolate(s,r,e.minV,e.maxV),a=e.interpolate(l,n,e.minV,e.maxV);e.polygons_full&&(i.edges.rt={path:[[1,g],[0,a]],move:{x:-1,y:0,enter:"rt"}}),e.polygons&&i.polygons.push([[0,a],[0,1],[1,1],[1,g]])},tetragon_r:function(i,l,s,r,n,e){var g=e.interpolate(l,s,e.minV,e.maxV),a=e.interpolate(n,r,e.minV,e.maxV);e.polygons_full&&(i.edges.br={path:[[g,0],[a,1]],move:{x:0,y:1,enter:"br"}}),e.polygons&&i.polygons.push([[g,0],[a,1],[1,1],[1,0]])},tetragon_b:function(i,l,s,r,n,e){var g=e.interpolate(l,n,e.minV,e.maxV),a=e.interpolate(s,r,e.minV,e.maxV);e.polygons_full&&(i.edges.lb={path:[[0,g],[1,a]],move:{x:1,y:0,enter:"lb"}}),e.polygons&&i.polygons.push([[0,0],[0,g],[1,a],[1,0]])},tetragon_l:function(i,l,s,r,n,e){var g=e.interpolate(n,r,e.minV,e.maxV),a=e.interpolate(l,s,e.minV,e.maxV);e.polygons_full&&(i.edges.tl={path:[[g,1],[a,0]],move:{x:0,y:-1,enter:"tl"}}),e.polygons&&i.polygons.push([[0,0],[0,1],[g,1],[a,0]])},tetragon_bl:function(i,l,s,r,n,e){var g=e.interpolate_a(l,s,e.minV,e.maxV),a=e.interpolate_b(l,s,e.minV,e.maxV),o=e.interpolate_a(l,n,e.minV,e.maxV),t=e.interpolate_b(l,n,e.minV,e.maxV);e.polygons_full&&(i.edges.bl={path:[[g,0],[0,o]],move:{x:-1,y:0,enter:"rb"}},i.edges.lt={path:[[0,t],[a,0]],move:{x:0,y:-1,enter:"tr"}}),e.polygons&&i.polygons.push([[g,0],[0,o],[0,t],[a,0]])},tetragon_br:function(i,l,s,r,n,e){var g=e.interpolate_a(l,s,e.minV,e.maxV),a=e.interpolate_b(l,s,e.minV,e.maxV),o=e.interpolate_a(s,r,e.minV,e.maxV),t=e.interpolate_b(s,r,e.minV,e.maxV);e.polygons_full&&(i.edges.bl={path:[[g,0],[1,t]],move:{x:1,y:0,enter:"lt"}},i.edges.rb={path:[[1,o],[a,0]],move:{x:0,y:-1,enter:"tr"}}),e.polygons&&i.polygons.push([[g,0],[1,t],[1,o],[a,0]])},tetragon_tr:function(i,l,s,r,n,e){var g=e.interpolate_a(n,r,e.minV,e.maxV),a=e.interpolate_b(n,r,e.minV,e.maxV),o=e.interpolate_b(s,r,e.minV,e.maxV),t=e.interpolate_a(s,r,e.minV,e.maxV);e.polygons_full&&(i.edges.rb={path:[[1,t],[g,1]],move:{x:0,y:1,enter:"bl"}},i.edges.tr={path:[[a,1],[1,o]],move:{x:1,y:0,enter:"lt"}}),e.polygons&&i.polygons.push([[1,t],[g,1],[a,1],[1,o]])},tetragon_tl:function(i,l,s,r,n,e){var g=e.interpolate_a(n,r,e.minV,e.maxV),a=e.interpolate_b(n,r,e.minV,e.maxV),o=e.interpolate_b(l,n,e.minV,e.maxV),t=e.interpolate_a(l,n,e.minV,e.maxV);e.polygons_full&&(i.edges.tr={path:[[a,1],[0,t]],move:{x:-1,y:0,enter:"rb"}},i.edges.lt={path:[[0,o],[g,1]],move:{x:0,y:1,enter:"bl"}}),e.polygons&&i.polygons.push([[a,1],[0,t],[0,o],[g,1]])},tetragon_lr:function(i,l,s,r,n,e){var g=e.interpolate_a(l,n,e.minV,e.maxV),a=e.interpolate_b(l,n,e.minV,e.maxV),o=e.interpolate_b(s,r,e.minV,e.maxV),t=e.interpolate_a(s,r,e.minV,e.maxV);e.polygons_full&&(i.edges.lt={path:[[0,a],[1,o]],move:{x:1,y:0,enter:"lt"}},i.edges.rb={path:[[1,t],[0,g]],move:{x:-1,y:0,enter:"rb"}}),e.polygons&&i.polygons.push([[0,g],[0,a],[1,o],[1,t]])},tetragon_tb:function(i,l,s,r,n,e){var g=e.interpolate_a(n,r,e.minV,e.maxV),a=e.interpolate_b(n,r,e.minV,e.maxV),o=e.interpolate_b(l,s,e.minV,e.maxV),t=e.interpolate_a(l,s,e.minV,e.maxV);e.polygons_full&&(i.edges.tr={path:[[a,1],[o,0]],move:{x:0,y:-1,enter:"tr"}},i.edges.bl={path:[[t,0],[g,1]],move:{x:0,y:1,enter:"bl"}}),e.polygons&&i.polygons.push([[t,0],[g,1],[a,1],[o,0]])},pentagon_tr:function(i,l,s,r,n,e){var g=e.interpolate(n,r,e.minV,e.maxV),a=e.interpolate(s,r,e.minV,e.maxV);e.polygons_full&&(i.edges.tl={path:[[g,1],[1,a]],move:{x:1,y:0,enter:"lb"}}),e.polygons&&i.polygons.push([[0,0],[0,1],[g,1],[1,a],[1,0]])},pentagon_tl:function(i,l,s,r,n,e){var g=e.interpolate(l,n,e.minV,e.maxV),a=e.interpolate(n,r,e.minV,e.maxV);e.polygons_full&&(i.edges.lb={path:[[0,g],[a,1]],move:{x:0,y:1,enter:"br"}}),e.polygons&&i.polygons.push([[0,0],[0,g],[a,1],[1,1],[1,0]])},pentagon_br:function(i,l,s,r,n,e){var g=e.interpolate(l,s,e.minV,e.maxV),a=e.interpolate(s,r,e.minV,e.maxV);e.polygons_full&&(i.edges.rt={path:[[1,a],[g,0]],move:{x:0,y:-1,enter:"tl"}}),e.polygons&&i.polygons.push([[0,0],[0,1],[1,1],[1,a],[g,0]])},pentagon_bl:function(i,l,s,r,n,e){var g=e.interpolate(l,n,e.minV,e.maxV),a=e.interpolate(l,s,e.minV,e.maxV);e.polygons_full&&(i.edges.br={path:[[a,0],[0,g]],move:{x:-1,y:0,enter:"rt"}}),e.polygons&&i.polygons.push([[0,g],[0,1],[1,1],[1,0],[a,0]])},pentagon_tr_rl:function(i,l,s,r,n,e){var g=e.interpolate(l,n,e.minV,e.maxV),a=e.interpolate(n,r,e.minV,e.maxV),o=e.interpolate_b(s,r,e.minV,e.maxV),t=e.interpolate_a(s,r,e.minV,e.maxV);e.polygons_full&&(i.edges.tl={path:[[a,1],[1,o]],move:{x:1,y:0,enter:"lt"}},i.edges.rb={path:[[1,t],[0,g]],move:{x:-1,y:0,enter:"rt"}}),e.polygons&&i.polygons.push([[0,g],[0,1],[a,1],[1,o],[1,t]])},pentagon_rb_bt:function(i,l,s,r,n,e){var g=e.interpolate(s,r,e.minV,e.maxV),a=e.interpolate_b(l,s,e.minV,e.maxV),o=e.interpolate_a(l,s,e.minV,e.maxV),t=e.interpolate(n,r,e.minV,e.maxV);e.polygons_full&&(i.edges.rt={path:[[1,g],[a,0]],move:{x:0,y:-1,enter:"tr"}},i.edges.bl={path:[[o,0],[t,1]],move:{x:0,y:1,enter:"br"}}),e.polygons&&i.polygons.push([[t,1],[1,1],[1,g],[a,0],[o,0]])},pentagon_bl_lr:function(i,l,s,r,n,e){var g=e.interpolate(l,s,e.minV,e.maxV),a=e.interpolate_a(l,n,e.minV,e.maxV),o=e.interpolate_b(l,n,e.minV,e.maxV),t=e.interpolate(s,r,e.minV,e.maxV);e.polygons_full&&(i.edges.br={path:[[g,0],[0,a]],move:{x:-1,y:0,enter:"rb"}},i.edges.lt={path:[[0,o],[1,t]],move:{x:1,y:0,enter:"lb"}}),e.polygons&&i.polygons.push([[g,0],[0,a],[0,o],[1,t],[1,0]])},pentagon_lt_tb:function(i,l,s,r,n,e){var g=e.interpolate(l,n,e.minV,e.maxV),a=e.interpolate_a(n,r,e.minV,e.maxV),o=e.interpolate_b(n,r,e.minV,e.maxV),t=e.interpolate(l,s,e.minV,e.maxV);e.polygons_full&&(i.edges.lb={path:[[0,g],[a,1]],move:{x:0,y:1,enter:"bl"}},i.edges.tr={path:[[o,1],[t,0]],move:{x:0,y:-1,enter:"tl"}}),e.polygons&&i.polygons.push([[0,0],[0,g],[a,1],[o,1],[t,0]])},pentagon_bl_tb:function(i,l,s,r,n,e){var g=e.interpolate(l,n,e.minV,e.maxV),a=e.interpolate(n,r,e.minV,e.maxV),o=e.interpolate_b(l,s,e.minV,e.maxV),t=e.interpolate_a(l,s,e.minV,e.maxV);e.polygons_full&&(i.edges.bl={path:[[t,0],[0,g]],move:{x:-1,y:0,enter:"rt"}},i.edges.tl={path:[[a,1],[o,0]],move:{x:0,y:-1,enter:"tr"}}),e.polygons&&i.polygons.push([[0,g],[0,1],[a,1],[o,0],[t,0]])},pentagon_lt_rl:function(i,l,s,r,n,e){var g=e.interpolate_a(l,n,e.minV,e.maxV),a=e.interpolate_b(l,n,e.minV,e.maxV),o=e.interpolate(n,r,e.minV,e.maxV),t=e.interpolate(s,n,e.minV,e.maxV);e.polygons_full&&(i.edges.lt={path:[[0,a],[o,1]],move:{x:0,y:1,enter:"br"}},i.edges.rt={path:[[1,t],[0,g]],move:{x:-1,y:0,enter:"rb"}}),e.polygons&&i.polygons.push([[0,g],[0,a],[o,1],[1,1],[1,t]])},pentagon_tr_bt:function(i,l,s,r,n,e){var g=e.interpolate_a(n,r,e.minV,e.maxV),a=e.interpolate_b(n,r,e.minV,e.maxV),o=e.interpolate(s,r,e.minV,e.maxV),t=e.interpolate(l,s,e.minV,e.maxV);e.polygons_full&&(i.edges.br={path:[[t,0],[g,1]],move:{x:0,y:1,enter:"bl"}},i.edges.tr={path:[[a,1],[1,o]],move:{x:1,y:0,enter:"lb"}}),e.polygons&&i.polygons.push([[g,1],[a,1],[1,o],[1,0],[t,0]])},pentagon_rb_lr:function(i,l,s,r,n,e){var g=e.interpolate(l,n,e.minV,e.maxV),a=e.interpolate_b(s,r,e.minV,e.maxV),o=e.interpolate_a(s,r,e.minV,e.maxV),t=e.interpolate(l,s,e.minV,e.maxV);e.polygons_full&&(i.edges.lb={path:[[0,g],[1,a]],move:{x:1,y:0,enter:"lt"}},i.edges.rb={path:[[1,o],[t,0]],move:{x:0,y:-1,enter:"tl"}}),e.polygons&&i.polygons.push([[0,0],[0,g],[1,a],[1,o],[t,0]])},hexagon_lt_tr:function(i,l,s,r,n,e){var g=e.interpolate(l,n,e.minV,e.maxV),a=e.interpolate_a(n,r,e.minV,e.maxV),o=e.interpolate_b(n,r,e.minV,e.maxV),t=e.interpolate(s,r,e.minV,e.maxV);e.polygons_full&&(i.edges.lb={path:[[0,g],[a,1]],move:{x:0,y:1,enter:"bl"}},i.edges.tr={path:[[o,1],[1,t]],move:{x:1,y:0,enter:"lb"}}),e.polygons&&i.polygons.push([[0,0],[0,g],[a,1],[o,1],[1,t],[1,0]])},hexagon_bl_lt:function(i,l,s,r,n,e){var g=e.interpolate(l,s,e.minV,e.maxV),a=e.interpolate_a(l,n,e.minV,e.maxV),o=e.interpolate_b(l,n,e.minV,e.maxV),t=e.interpolate(n,r,e.minV,e.maxV);e.polygons_full&&(i.edges.br={path:[[g,0],[0,a]],move:{x:-1,y:0,enter:"rb"}},i.edges.lt={path:[[0,o],[t,1]],move:{x:0,y:1,enter:"br"}}),e.polygons&&i.polygons.push([[g,0],[0,a],[0,o],[t,1],[1,1],[1,0]])},hexagon_bl_rb:function(i,l,s,r,n,e){var g=e.interpolate_a(l,s,e.minV,e.maxV),a=e.interpolate_b(l,s,e.minV,e.maxV),o=e.interpolate(l,n,e.minV,e.maxV),t=e.interpolate(s,r,e.minV,e.maxV);e.polygons_full&&(i.edges.bl={path:[[g,0],[0,o]],move:{x:-1,y:0,enter:"rt"}},i.edges.rt={path:[[1,t],[a,0]],move:{x:0,y:-1,enter:"tr"}}),e.polygons&&i.polygons.push([[g,0],[0,o],[0,1],[1,1],[1,t],[a,0]])},hexagon_tr_rb:function(i,l,s,r,n,e){var g=e.interpolate(l,s,e.minV,e.maxV),a=e.interpolate(n,r,e.minV,e.maxV),o=e.interpolate_b(s,r,e.minV,e.maxV),t=e.interpolate_a(s,r,e.minV,e.maxV);e.polygons_full&&(i.edges.tl={path:[[a,1],[1,o]],move:{x:1,y:0,enter:"lt"}},i.edges.rb={path:[[1,t],[g,0]],move:{x:0,y:-1,enter:"tl"}}),e.polygons&&i.polygons.push([[0,0],[0,1],[a,1],[1,o],[1,t],[g,0]])},hexagon_lt_rb:function(i,l,s,r,n,e){var g=e.interpolate(l,n,e.minV,e.maxV),a=e.interpolate(n,r,e.minV,e.maxV),o=e.interpolate(s,r,e.minV,e.maxV),t=e.interpolate(l,s,e.minV,e.maxV);e.polygons_full&&(i.edges.lb={path:[[0,g],[a,1]],move:{x:0,y:1,enter:"br"}},i.edges.rt={path:[[1,o],[t,0]],move:{x:0,y:-1,enter:"tl"}}),e.polygons&&i.polygons.push([[0,0],[0,g],[a,1],[1,1],[1,o],[t,0]])},hexagon_bl_tr:function(i,l,s,r,n,e){var g=e.interpolate(l,s,e.minV,e.maxV),a=e.interpolate(l,n,e.minV,e.maxV),o=e.interpolate(n,r,e.minV,e.maxV),t=e.interpolate(s,r,e.minV,e.maxV);e.polygons_full&&(i.edges.br={path:[[g,0],[0,a]],move:{x:-1,y:0,enter:"rt"}},i.edges.tl={path:[[o,1],[1,t]],move:{x:1,y:0,enter:"lb"}}),e.polygons&&i.polygons.push([[g,0],[0,a],[0,1],[o,1],[1,t],[1,0]])},heptagon_tr:function(i,l,s,r,n,e){var g=e.interpolate_a(l,s,e.minV,e.maxV),a=e.interpolate_b(l,s,e.minV,e.maxV),o=e.interpolate_a(l,n,e.minV,e.maxV),t=e.interpolate_b(l,n,e.minV,e.maxV),f=e.interpolate(n,r,e.minV,e.maxV),m=e.interpolate(s,r,e.minV,e.maxV);e.polygons_full&&(i.edges.bl={path:[[g,0],[0,o]],move:{x:-1,y:0,enter:"rb"}},i.edges.lt={path:[[0,t],[f,1]],move:{x:0,y:1,enter:"br"}},i.edges.rt={path:[[1,m],[a,0]],move:{x:0,y:-1,enter:"tr"}}),e.polygons&&i.polygons.push([[g,0],[0,o],[0,t],[f,1],[1,1],[1,m],[a,0]])},heptagon_bl:function(i,l,s,r,n,e){var g=e.interpolate(l,s,e.minV,e.maxV),a=e.interpolate(l,n,e.minV,e.maxV),o=e.interpolate_a(n,r,e.minV,e.maxV),t=e.interpolate_b(n,r,e.minV,e.maxV),f=e.interpolate_b(s,r,e.minV,e.maxV),m=e.interpolate_a(s,r,e.minV,e.maxV);e.polygons_full&&(i.edges.lb={path:[[0,a],[o,1]],move:{x:0,y:1,enter:"bl"}},i.edges.tr={path:[[t,1],[1,f]],move:{x:1,y:0,enter:"lt"}},i.edges.rb={path:[[1,m],[g,0]],move:{x:0,y:-1,enter:"tl"}}),e.polygons&&i.polygons.push([[0,0],[0,a],[o,1],[t,1],[1,f],[1,m],[g,0]])},heptagon_tl:function(i,l,s,r,n,e){var g=e.interpolate_a(l,s,e.minV,e.maxV),a=e.interpolate_b(l,s,e.minV,e.maxV),o=e.interpolate(l,n,e.minV,e.maxV),t=e.interpolate(n,r,e.minV,e.maxV),f=e.interpolate_b(s,r,e.minV,e.maxV),m=e.interpolate_a(s,r,e.minV,e.maxV);e.polygons_full&&(i.edges.bl={path:[[g,0],[0,o]],move:{x:-1,y:0,enter:"rt"}},i.edges.tl={path:[[t,1],[1,f]],move:{x:1,y:0,enter:"lt"}},i.edges.rb={path:[[1,m],[a,0]],move:{x:0,y:-1,enter:"tr"}}),e.polygons&&i.polygons.push([[g,0],[0,o],[0,1],[t,1],[1,f],[1,m],[a,0]])},heptagon_br:function(i,l,s,r,n,e){var g=e.interpolate(l,s,e.minV,e.maxV),a=e.interpolate_a(l,n,e.minV,e.maxV),o=e.interpolate_b(l,n,e.minV,e.maxV),t=e.interpolate_a(n,r,e.minV,e.maxV),f=e.interpolate_b(n,r,e.minV,e.maxV),m=e.interpolate(s,r,e.minV,e.maxV);e.polygons_full&&(i.edges.br={path:[[g,0],[0,a]],move:{x:-1,y:0,enter:"rb"}},i.edges.lt={path:[[0,o],[t,1]],move:{x:0,y:1,enter:"bl"}},i.edges.tr={path:[[f,1],[1,m]],move:{x:1,y:0,enter:"lb"}}),e.polygons&&i.polygons.push([[g,0],[0,a],[0,o],[t,1],[f,1],[1,m],[1,0]])},octagon:function(i,l,s,r,n,e){var g=e.interpolate_a(l,s,e.minV,e.maxV),a=e.interpolate_b(l,s,e.minV,e.maxV),o=e.interpolate_a(l,n,e.minV,e.maxV),t=e.interpolate_b(l,n,e.minV,e.maxV),f=e.interpolate_a(n,r,e.minV,e.maxV),m=e.interpolate_b(n,r,e.minV,e.maxV),u=e.interpolate_b(s,r,e.minV,e.maxV),y=e.interpolate_a(s,r,e.minV,e.maxV);e.polygons_full&&(i.edges.bl={path:[[g,0],[0,o]],move:{x:-1,y:0,enter:"rb"}},i.edges.lt={path:[[0,t],[f,1]],move:{x:0,y:1,enter:"bl"}},i.edges.tr={path:[[m,1],[1,u]],move:{x:1,y:0,enter:"lt"}},i.edges.rb={path:[[1,y],[a,0]],move:{x:0,y:-1,enter:"tr"}}),e.polygons&&i.polygons.push([[g,0],[0,o],[0,t],[f,1],[m,1],[1,u],[1,y],[a,0]])}};function W(i,l,s,r){var n,e,g,a=!1,o=null,t=null,f=null,m=null,u=!1,y=[],_=[],b=[];if(!i)throw new Error("data is required");if(l==null)throw new Error("lowerBound is required");if(s==null)throw new Error("bandWidth is required");if(g=K(r),i instanceof L)o=i,t=i.root,f=i.data,g.noQuadTree||(a=!0);else if(Array.isArray(i)&&Array.isArray(i[0]))f=i;else throw new Error("input is neither array of arrays nor object retrieved from 'QuadTree()'");if(Array.isArray(l)){for(u=!0,g.noQuadTree||(a=!0),n=0;n<l.length;n++)if(isNaN(+l[n]))throw new Error("lowerBound["+n+"] is not a number");if(Array.isArray(s)){if(l.length!==s.length)throw new Error("lowerBound and bandWidth have unequal lengths");for(n=0;n<s.length;n++)if(isNaN(+s[n]))throw new Error("bandWidth["+n+"] is not a number")}else{if(isNaN(+s))throw new Error("bandWidth must be a number");for(y=[],n=0;n<l.length;n++)y.push(s);s=y}}else{if(isNaN(+l))throw new Error("lowerBound must be a number");if(l=[l],isNaN(+s))throw new Error("bandWidth must be a number");s=[s]}return a&&!t&&(o=new L(f),t=o.root,f=o.data),g.verbose&&(g.polygons?console.log("MarchingSquaresJS-isoBands: returning single polygons for each grid cell"):console.log("MarchingSquaresJS-isoBands: returning polygon paths for entire data grid"),u&&console.log("MarchingSquaresJS-isoBands: multiple bands requested, returning array of band polygons instead of polygons for a single band")),l.forEach(function(v,d){if(_=[],g.minV=v,g.maxV=v+s[d],g.verbose&&console.log("MarchingSquaresJS-isoBands: computing isobands for ["+v+":"+(v+s[d])+"]"),g.polygons)if(a)t.cellsInBand(g.minV,g.maxV,!0).forEach(function(V){_=_.concat(j(D(f,V.x,V.y,g),V.x,V.y,g))});else for(e=0;e<f.length-1;++e)for(n=0;n<f[0].length-1;++n)_=_.concat(j(D(f,n,e,g),n,e,g));else{for(m=[],n=0;n<f[0].length-1;++n)m[n]=[];if(a)t.cellsInBand(g.minV,g.maxV,!1).forEach(function(V){m[V.x][V.y]=D(f,V.x,V.y,g)});else for(n=0;n<f[0].length-1;++n)for(e=0;e<f.length-1;++e)m[n][e]=D(f,n,e,g);_=X(f,m,g)}u?b.push(_):b=_,typeof g.successCallback=="function"&&g.successCallback(b,v,s[d])}),b}function c(i,l,s,r,n,e){var g=(r+s+l+i)/4;return g>e?2:g<n?0:1}function D(i,l,s,r){var n,e,g=0,a=i[s+1][l],o=i[s+1][l+1],t=i[s][l+1],f=i[s][l],m=r.minV,u=r.maxV;if(!(isNaN(f)||isNaN(t)||isNaN(o)||isNaN(a))){switch(g|=a<m?0:a>u?128:64,g|=o<m?0:o>u?32:16,g|=t<m?0:t>u?8:4,g|=f<m?0:f>u?2:1,g=+g,e=0,n={cval:g,polygons:[],edges:{},x0:f,x1:t,x2:o,x3:a,x:l,y:s},g){case 85:h.square(n,f,t,o,a,r);case 0:case 170:break;case 169:h.triangle_bl(n,f,t,o,a,r);break;case 166:h.triangle_br(n,f,t,o,a,r);break;case 154:h.triangle_tr(n,f,t,o,a,r);break;case 106:h.triangle_tl(n,f,t,o,a,r);break;case 1:h.triangle_bl(n,f,t,o,a,r);break;case 4:h.triangle_br(n,f,t,o,a,r);break;case 16:h.triangle_tr(n,f,t,o,a,r);break;case 64:h.triangle_tl(n,f,t,o,a,r);break;case 168:h.tetragon_bl(n,f,t,o,a,r);break;case 162:h.tetragon_br(n,f,t,o,a,r);break;case 138:h.tetragon_tr(n,f,t,o,a,r);break;case 42:h.tetragon_tl(n,f,t,o,a,r);break;case 2:h.tetragon_bl(n,f,t,o,a,r);break;case 8:h.tetragon_br(n,f,t,o,a,r);break;case 32:h.tetragon_tr(n,f,t,o,a,r);break;case 128:h.tetragon_tl(n,f,t,o,a,r);break;case 5:h.tetragon_b(n,f,t,o,a,r);break;case 20:h.tetragon_r(n,f,t,o,a,r);break;case 80:h.tetragon_t(n,f,t,o,a,r);break;case 65:h.tetragon_l(n,f,t,o,a,r);break;case 165:h.tetragon_b(n,f,t,o,a,r);break;case 150:h.tetragon_r(n,f,t,o,a,r);break;case 90:h.tetragon_t(n,f,t,o,a,r);break;case 105:h.tetragon_l(n,f,t,o,a,r);break;case 160:h.tetragon_lr(n,f,t,o,a,r);break;case 130:h.tetragon_tb(n,f,t,o,a,r);break;case 10:h.tetragon_lr(n,f,t,o,a,r);break;case 40:h.tetragon_tb(n,f,t,o,a,r);break;case 101:h.pentagon_tr(n,f,t,o,a,r);break;case 149:h.pentagon_tl(n,f,t,o,a,r);break;case 86:h.pentagon_bl(n,f,t,o,a,r);break;case 89:h.pentagon_br(n,f,t,o,a,r);break;case 69:h.pentagon_tr(n,f,t,o,a,r);break;case 21:h.pentagon_tl(n,f,t,o,a,r);break;case 84:h.pentagon_bl(n,f,t,o,a,r);break;case 81:h.pentagon_br(n,f,t,o,a,r);break;case 96:h.pentagon_tr_rl(n,f,t,o,a,r);break;case 24:h.pentagon_rb_bt(n,f,t,o,a,r);break;case 6:h.pentagon_bl_lr(n,f,t,o,a,r);break;case 129:h.pentagon_lt_tb(n,f,t,o,a,r);break;case 74:h.pentagon_tr_rl(n,f,t,o,a,r);break;case 146:h.pentagon_rb_bt(n,f,t,o,a,r);break;case 164:h.pentagon_bl_lr(n,f,t,o,a,r);break;case 41:h.pentagon_lt_tb(n,f,t,o,a,r);break;case 66:h.pentagon_bl_tb(n,f,t,o,a,r);break;case 144:h.pentagon_lt_rl(n,f,t,o,a,r);break;case 36:h.pentagon_tr_bt(n,f,t,o,a,r);break;case 9:h.pentagon_rb_lr(n,f,t,o,a,r);break;case 104:h.pentagon_bl_tb(n,f,t,o,a,r);break;case 26:h.pentagon_lt_rl(n,f,t,o,a,r);break;case 134:h.pentagon_tr_bt(n,f,t,o,a,r);break;case 161:h.pentagon_rb_lr(n,f,t,o,a,r);break;case 37:h.hexagon_lt_tr(n,f,t,o,a,r);break;case 148:h.hexagon_bl_lt(n,f,t,o,a,r);break;case 82:h.hexagon_bl_rb(n,f,t,o,a,r);break;case 73:h.hexagon_tr_rb(n,f,t,o,a,r);break;case 133:h.hexagon_lt_tr(n,f,t,o,a,r);break;case 22:h.hexagon_bl_lt(n,f,t,o,a,r);break;case 88:h.hexagon_bl_rb(n,f,t,o,a,r);break;case 97:h.hexagon_tr_rb(n,f,t,o,a,r);break;case 145:h.hexagon_lt_rb(n,f,t,o,a,r);break;case 25:h.hexagon_lt_rb(n,f,t,o,a,r);break;case 70:h.hexagon_bl_tr(n,f,t,o,a,r);break;case 100:h.hexagon_bl_tr(n,f,t,o,a,r);break;case 17:e=c(f,t,o,a,m,u),e===0?(h.triangle_bl(n,f,t,o,a,r),h.triangle_tr(n,f,t,o,a,r)):h.hexagon_lt_rb(n,f,t,o,a,r);break;case 68:e=c(f,t,o,a,m,u),e===0?(h.triangle_tl(n,f,t,o,a,r),h.triangle_br(n,f,t,o,a,r)):h.hexagon_bl_tr(n,f,t,o,a,r);break;case 153:e=c(f,t,o,a,m,u),e===2?(h.triangle_bl(n,f,t,o,a,r),h.triangle_tr(n,f,t,o,a,r)):h.hexagon_lt_rb(n,f,t,o,a,r);break;case 102:e=c(f,t,o,a,m,u),e===2?(h.triangle_tl(n,f,t,o,a,r),h.triangle_br(n,f,t,o,a,r)):h.hexagon_bl_tr(n,f,t,o,a,r);break;case 152:e=c(f,t,o,a,m,u),e===2?(h.triangle_tr(n,f,t,o,a,r),h.tetragon_bl(n,f,t,o,a,r)):h.heptagon_tr(n,f,t,o,a,r);break;case 137:e=c(f,t,o,a,m,u),e===2?(h.triangle_bl(n,f,t,o,a,r),h.tetragon_tr(n,f,t,o,a,r)):h.heptagon_bl(n,f,t,o,a,r);break;case 98:e=c(f,t,o,a,m,u),e===2?(h.triangle_tl(n,f,t,o,a,r),h.tetragon_br(n,f,t,o,a,r)):h.heptagon_tl(n,f,t,o,a,r);break;case 38:e=c(f,t,o,a,m,u),e===2?(h.triangle_br(n,f,t,o,a,r),h.tetragon_tl(n,f,t,o,a,r)):h.heptagon_br(n,f,t,o,a,r);break;case 18:e=c(f,t,o,a,m,u),e===0?(h.triangle_tr(n,f,t,o,a,r),h.tetragon_bl(n,f,t,o,a,r)):h.heptagon_tr(n,f,t,o,a,r);break;case 33:e=c(f,t,o,a,m,u),e===0?(h.triangle_bl(n,f,t,o,a,r),h.tetragon_tr(n,f,t,o,a,r)):h.heptagon_bl(n,f,t,o,a,r);break;case 72:e=c(f,t,o,a,m,u),e===0?(h.triangle_tl(n,f,t,o,a,r),h.tetragon_br(n,f,t,o,a,r)):h.heptagon_tl(n,f,t,o,a,r);break;case 132:e=c(f,t,o,a,m,u),e===0?(h.triangle_br(n,f,t,o,a,r),h.tetragon_tl(n,f,t,o,a,r)):h.heptagon_br(n,f,t,o,a,r);break;case 136:e=c(f,t,o,a,m,u),e===0?(h.tetragon_tl(n,f,t,o,a,r),h.tetragon_br(n,f,t,o,a,r)):e===1?h.octagon(n,f,t,o,a,r):(h.tetragon_bl(n,f,t,o,a,r),h.tetragon_tr(n,f,t,o,a,r));break;case 34:e=c(f,t,o,a,m,u),e===0?(h.tetragon_bl(n,f,t,o,a,r),h.tetragon_tr(n,f,t,o,a,r)):e===1?h.octagon(n,f,t,o,a,r):(h.tetragon_tl(n,f,t,o,a,r),h.tetragon_br(n,f,t,o,a,r));break}return n}}export{Z as a,W as i};
