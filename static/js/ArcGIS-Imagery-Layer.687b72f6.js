const e="<template>\r\n  <div class=\"container\">\r\n    <div class=\"btn_wrapper\">\r\n      <el-button type=\"primary\" size=\"small\" @click=\"toggleLayer('img')\">影像</el-button>\r\n      <el-button type=\"primary\" size=\"small\" @click=\"toggleLayer('vec')\">电子地图</el-button>\r\n    </div>\r\n    <div class=\"cesiumContainer\" id=\"cesiumContainer\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport * as Cesium from 'cesium'\r\nimport { onMounted, ref } from 'vue'\r\n\r\nconst selectedType = ref('vec')\r\nlet viewer\r\nlet currentLayer\r\n\r\nconst layerConfig = {\r\n  'img': 'https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer',\r\n  'vec': 'https://services.arcgisonline.com/arcgis/rest/services/World_Topo_Map/MapServer'\r\n}\r\nconst toggleLayer = async (type, isInitializing = false) => {\r\n  if (selectedType.value === type && !isInitializing) return\r\n  if (currentLayer) {\r\n    viewer.imageryLayers.remove(currentLayer)\r\n  }\r\n  selectedType.value = type\r\n  const url = layerConfig[type]\r\n  const imageryProvider = await Cesium.ArcGisMapServerImageryProvider.fromUrl(url)\r\n  currentLayer = viewer.imageryLayers.addImageryProvider(imageryProvider)\r\n}\r\n\r\nonMounted(async () => {\r\n  viewer = new Cesium.Viewer('cesiumContainer', {\r\n    animation: false, // 是否创建动画小器件，左下角仪表\r\n    baseLayerPicker: false, // 是否显示图层选择器\r\n    fullscreenButton: false, // 是否显示全屏按钮\r\n    vrButton: false, // 用于切换 VR 模式的单个按钮小部件。\r\n    geocoder: false, // //是否显示geocoder小器件，右上角查询按钮\r\n    homeButton: false, // 是否显示Home按钮\r\n    infoBox: false, // 是否显示信息框\r\n    sceneModePicker: false, // 是否显示3D/2D选择器\r\n    selectionIndicator: false, // 是否显示选取指示器组件\r\n    timeline: false, // 是否显示时间轴\r\n    navigationHelpButton: false, // 是否显示右上角的帮助按钮\r\n    navigationInstructionsInitiallyVisible: false,\r\n    scene3DOnly: false, // 如果设置为true，则所有几何图形以3D模式绘制以节约GPU资源\r\n    shouldAnimate: false, // 初始化是否开始动画\r\n    baseLayer: false\r\n  })\r\n  viewer.scene.globe.maximumScreenSpaceError = 1.4 // 减少屏幕空间误差，提高渲染质量\r\n\r\n  // 切换图层\r\n  toggleLayer(selectedType.value, true)\r\n\r\n  // 定位中国范围\r\n  const rectangle = Cesium.Rectangle.fromDegrees(73.66, 3.86, 135.05, 53.55)\r\n  viewer.camera.flyTo({\r\n    destination: rectangle,\r\n    orientation: {\r\n      heading: Math.toRadians(0),\r\n      pitch: Math.toRadians(-90),\r\n      roll: Math.toRadians(0)\r\n    },\r\n    duration: 0\r\n  })\r\n})\r\n<\/script>\r\n<style scoped>\r\n.container {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  .cesiumContainer {\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden\r\n  }\r\n  .btn_wrapper {\r\n    position: absolute;\r\n    left: 50px;\r\n    top: 10px;\r\n    z-index: 1;\r\n  }\r\n}\r\n</style>\r\n";export{e as default};
